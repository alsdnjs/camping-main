plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ict'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	// implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	// implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'


		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 소셜 로그인 처리
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	
	// twillo 문자 인증
	implementation 'com.twilio.sdk:twilio:8.32.0'

	implementation 'com.google.api-client:google-api-client:1.32.1'

	// Spring WebSocket 스타터는 호환되는 버전으로 자동 관리됩니다.
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
	 // 공통 컴파일러 매개변수
    def commonArgs = ["-parameters", "-Xlint:unchecked", "-Xlint:deprecation"]
	 // 컴파일러 매개변수 병합 및 중복 제거
    options.compilerArgs = (options.compilerArgs + commonArgs).unique()
}


tasks.named('test') {
	useJUnitPlatform()
}



