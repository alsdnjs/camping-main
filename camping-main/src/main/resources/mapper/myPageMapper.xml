<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ict.camping.domain.myPage.mapper.MyPageMapper">
    <select id="getMyFavoriteCampingSites" parameterType="String" resultType="String">
        SELECT contentId FROM camping_likes WHERE user_idx = #{user_idx}
    </select>

    <select id="getCampingSitesById" parameterType="list" resultType="CampingSiteVO">
        SELECT * FROM campingsites WHERE contentId IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="deleteMyCampingSite" parameterType="map">
        DELETE FROM camping_likes
        WHERE user_idx = #{user_idx}
        AND contentId = #{contentId}
    </delete>

    <select id="getUsageHistory" parameterType="String" resultType="UsageHistoryVO">
        SELECT c.facltNm, u.* FROM usage_history u JOIN campingsites c
        ON c.contentId = u.contentId
        WHERE user_idx = #{user_idx}
    </select>

    <select id="getMyInquiryHistory" parameterType="String" resultType="InquiryVO">
        SELECT * FROM inquiry i
        LEFT JOIN files f ON i.file_idx = f.file_idx
        LEFT JOIN inquiry_answer a ON i.inquiry_idx = a.inquiry_idx
        WHERE user_idx = #{user_idx}
    </select>

    <select id="getCampingLikesCount">
        SELECT COUNT(*) FROM camping_likes WHERE contentId = #{contentId}
    </select>

    <select id="getMyReviews" parameterType="String" resultType="MyReviewVO">
        SELECT r.*, f.file_name, f.file_path, c.facltNm, c.firstImageUrl FROM camping_reviews r
        LEFT JOIN files f ON r.file_idx = f.file_idx
        LEFT JOIN campingsites c ON r.contentId = c.contentId
        WHERE user_idx = #{user_idx};
    </select>

    <!-- useGeneratedKeys="true": 이 속성은 삽입된 데이터에 대해 자동으로 생성된 키 값을 반환하도록 MyBatis에 지시합니다. -->
    <!-- keyProperty="idx": idx는 반환된 값이 저장될 FileVO 객체의 프로퍼티입니다. -->
    <insert id="setFile" parameterType="FileVO"  useGeneratedKeys="true" keyProperty="file_idx">
        INSERT INTO files (file_name, file_path, file_size, file_type, type, created_at)
        VALUES (#{file_name}, #{file_path}, #{file_size}, #{file_type}, #{type}, NOW())
    </insert>
    <insert id="insertInquiry" parameterType="InquiryVO">
        INSERT INTO inquiry(user_idx, subject, content, created_at, file_idx)
                VALUES (#{user_idx}, #{subject}, #{content}, NOW(), #{file_idx})
    </insert>
    <update id="updateProfileImage" parameterType="map">
        UPDATE users
        SET avatar_url = #{avatar_url}
        WHERE user_idx = #{user_idx}
    </update>
    <delete id="deleteImageFile" parameterType="String">
        DELETE FROM files
        WHERE file_name = #{file_name}
    </delete>
    <select id="getMyMeetingsList" parameterType="String" resultType="MyRegularMeetingVO">
        SELECT * FROM regular_meetings a
        LEFT JOIN regular_meeting_members b
        ON a.meeting_idx = b.meeting_idx
        WHERE user_idx = #{user_idx}
    </select>
    <select id="getMyLikesMeetings" parameterType="String" resultType="MyRegularMeetingVO">
        SELECT * FROM regular_meetings m
        LEFT JOIN regular_meetings_favorites f
        ON m.meeting_idx = f.meeting_idx
        WHERE user_idx = #{user_idx};
    </select>
    <delete id="toggleLikesDelete" parameterType="map">
        DELETE FROM regular_meetings_favorites
        WHERE user_idx = #{user_idx}
        AND meeting_idx = #{meeting_idx}
    </delete>
</mapper>